# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2


# Jekyllサイトをビルドし、GitHub PagesにデプロイするGitHub Actionsのワークフロー、
# masterブランチ（※）にプッシュされたときに実行される。
# GITHUB_TOKENの権限を設定して、GitHub Pagesへのデプロイを許可します。
# ビルドジョブとデプロイジョブがあります。ビルドジョブでは、Ubuntu環境でJekyllのビルドを行い、アーティファクトをアップロードします。デプロイジョブでは、ビルドジョブが完了するまで待機し、GitHub Pagesにアップロードされたアーティファクトを展開します。
# このワークフローは、Jekyllを使用して静的サイトを構築し、GitHub Pagesにデプロイする場合に便利です。また、異なるバージョンのRubyをサポートし、自動的に依存関係をインストールし、アーティファクトをアップロードしてGitHub Pagesにデプロイします。

# （※）Gitの主要な開発ブランチの一つである「master」ブランチのこと
# 　通常、開発者が開発中のコードをプッシュする先として使用、プロジェクトの主要な開発状況を反映。
# 　また、GitHubを含む多くのGitホスティングサービスで、デフォルトで「master」ブランチが作成される。
# 　ただし、近年では「main」ブランチなど、差別的でないように命名されたブランチ名も使用される。
