---
# Only the main Sass file needs front matter (the dashes are enough)
---

// Default theme colors
$theme-colors: (
  "coolblack": #090a0b,
  "spacegrey": #353535,
  "snowwhite": #ffffff,
);

// Default brand colors
$brand-colors: (
  "orangered": #ff5100,
  "greatgold": #f2cb05,
  "greenblue": #389092,
);

$theme-name: "{{ site.theme_color }}";
$brand-name: "{{ site.brand_color }}";
$theme-color: map-get($theme-colors, "snowwhite");
$brand-color: map-get($brand-colors, "orangered");

@if map-has-key($theme-colors, $theme-name) {
  $theme-color: map-get($theme-colors, $theme-name);
} @else if str-index($theme-name, "#") == 1 {
  $theme-color: {{ site.theme_color | default: '#ffffff' }};
}

@if map-has-key($brand-colors, $brand-name) {
  $brand-color: map-get($brand-colors, $brand-name);
} @else if str-index($brand-name, "#") == 1 {
  $brand-color: {{ site.brand_color | default: '#ff5100' }};
}

$content-width: {{ site.content_width | default: '920px' }};

@import "yat";



// このコードは、Sassの変数を使用してカラースキームを定義し、
// サイトのテーマとブランドのカラーを決定している。

// 変数 $theme-colors は、テーマカラーのマップを定義している。
// それぞれのテーマカラーには、名前とカラーコードのキー・バリューがペアになっている。
// 同様に、変数 $brand-colors は、ブランドカラーのマップを定義している。

// 変数 $theme-name と $brand-name は、Front Matterと呼ばれるJekyllの設定ファイルから
// 受け取った値を保持する。
// もし設定ファイルにテーマカラーまたはブランドカラーの名前が含まれている場合は、
// そのカラーを使用する。

// @if文を使用して、テーマカラーがマップに含まれているかどうかを確認する。
// マップに含まれている場合は、そのカラーを選択する。
// また、設定ファイルからの値がカラーコードである場合は、そのカラーコードを使用する。
// 同様に、ブランドカラーを決定する。

// 最後に、$content-width変数にコンテンツエリアの幅を定義し、@import文を使用して
// 他のSassファイルをインポートする。











